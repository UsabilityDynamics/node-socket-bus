/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['plugins/round-robin.js']) {
  _$jscoverage['plugins/round-robin.js'] = [];
  _$jscoverage['plugins/round-robin.js'][6] = 0;
  _$jscoverage['plugins/round-robin.js'][18] = 0;
  _$jscoverage['plugins/round-robin.js'][19] = 0;
  _$jscoverage['plugins/round-robin.js'][20] = 0;
  _$jscoverage['plugins/round-robin.js'][22] = 0;
  _$jscoverage['plugins/round-robin.js'][28] = 0;
  _$jscoverage['plugins/round-robin.js'][34] = 0;
  _$jscoverage['plugins/round-robin.js'][40] = 0;
  _$jscoverage['plugins/round-robin.js'][41] = 0;
  _$jscoverage['plugins/round-robin.js'][45] = 0;
  _$jscoverage['plugins/round-robin.js'][47] = 0;
  _$jscoverage['plugins/round-robin.js'][48] = 0;
  _$jscoverage['plugins/round-robin.js'][50] = 0;
}
_$jscoverage['plugins/round-robin.js'][6]++;
var slice = require("../utils").slice;
_$jscoverage['plugins/round-robin.js'][18]++;
module.exports = (function (options) {
  _$jscoverage['plugins/round-robin.js'][19]++;
  options = options || {};
  _$jscoverage['plugins/round-robin.js'][20]++;
  var fallback = options.fallback || (function () {
});
  _$jscoverage['plugins/round-robin.js'][22]++;
  return (function (sock) {
  _$jscoverage['plugins/round-robin.js'][28]++;
  fallback = fallback.bind(sock);
  _$jscoverage['plugins/round-robin.js'][34]++;
  var n = 0;
  _$jscoverage['plugins/round-robin.js'][40]++;
  sock.send = (function (msg) {
  _$jscoverage['plugins/round-robin.js'][41]++;
  var socks = this.socks, len = socks.length, sock = socks[n++ % len];
  _$jscoverage['plugins/round-robin.js'][45]++;
  if (arguments.length > 1) {
    _$jscoverage['plugins/round-robin.js'][45]++;
    msg = slice(arguments);
  }
  _$jscoverage['plugins/round-robin.js'][47]++;
  if (sock && sock.writable) {
    _$jscoverage['plugins/round-robin.js'][48]++;
    sock.write(this.pack(msg));
  }
  else {
    _$jscoverage['plugins/round-robin.js'][50]++;
    fallback(msg);
  }
});
});
});
_$jscoverage['plugins/round-robin.js'].source = ["","/**"," * Deps."," */","","var slice = require('../utils').slice;","","/**"," * Round-robin plugin."," *"," * Provides a `send` method which will"," * write the `msg` to all connected peers."," *"," * @param {Object} options"," * @api private"," */","","module.exports = function(options){","  options = options || {};","  var fallback = options.fallback || function(){};","","  return function(sock){","","    /**","     * Bind callback to `sock`.","     */","","    fallback = fallback.bind(sock);","","    /**","     * Initialize counter.","     */","","    var n = 0;","","    /**","     * Sends `msg` to all connected peers round-robin.","     */","","    sock.send = function(msg){","      var socks = this.socks","        , len = socks.length","        , sock = socks[n++ % len];","","      if (arguments.length &gt; 1) msg = slice(arguments);","","      if (sock &amp;&amp; sock.writable) {","        sock.write(this.pack(msg));","      } else {","        fallback(msg);","      }","    };","","  };","};"];
